name: Continuous Integration
on:
  push:
jobs:
  norm:
    name: norminette
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install norminette
      - name: Run Norminette
        run: make norm

  build:
    name: check allowed functions
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build push_swap
        run: make
      - name: Build checker
        run: make bonus
      - name: check allowed_functions
        run: test/check_allowed_functions.sh

  unit_test:
    name: unit_test
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build push_swap
        run: make
      - name: Unit test
        run: make test

  e2e_test:
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build push_swap
        run: make
      - name: Build checker
        run: make bonus
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
      - name: Run tests
        run: rake test

  coverage:
    name: Generate and Upload Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcovr
      - name: Build with coverage
        run: make coverage
      - name: Run tests with coverage
        run: make test
      - name: Generate coverage report
        run: make report_coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: true
